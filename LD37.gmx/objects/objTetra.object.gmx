<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTetra</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objNeutralFish</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Run the parent setup code
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup variables

curTarget = noone;
curDir = 0;

baseSpeed = 3;
burstSpeed = 9;
burstTime = room_speed * 2;
burstAccelFrames = burstTime * 0.7
burstDecelFrames = burstTime - burstAccelFrames;


bursting = false;
burstMin = 3;
burstMax = 15;
burstCounter = 0;

turnSpeed = 10;

alarm[0] = round(random_range(burstMin, burstMax));

slowdown = false;
slowdownTime = 1.5;
slowSpeed = 1.5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///turn off slowdown

slowdown = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set target to noone

curTarget = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Turn on bursting
bursting = true;
burstCounter = 0;


alarm[0] = random_range(burstMin, burstMax) * room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Run the parent setup code
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Get new target

if (curTarget == noone || !instance_exists(curTarget)) {
  var num = instance_number(objFishFlakes);
  if (num &gt; 0) {
    curTarget = instance_find(objFishFlakes, irandom(num));
  } else {
    curTarget = objGoldfish;
    alarm[1] = random(5) * room_speed;
  }
}

//show_debug_message("bursting: " + string(bursting));
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Chase target

if (curTarget != noone &amp;&amp; instance_exists(curTarget)) {

  if (slowdown) {
    speed = slowSpeed;
  }
  else if (!bursting) {
    speed = baseSpeed;
  } else {
    if (burstCounter &lt; burstAccelFrames) {
      var perc = burstCounter / burstAccelFrames;
      speed = baseSpeed + (burstSpeed - baseSpeed) * perc * perc * perc;
    } else if (burstCounter &lt; burstTime) {
      var perc = (burstCounter - burstAccelFrames) / burstDecelFrames;
      speed = burstSpeed + (baseSpeed - burstSpeed) * perc * perc * perc;    
    } else {
      bursting = false;
    }
    burstCounter++;
  }
  
  goalDir = point_direction(x, y, curTarget.x, curTarget.y);
  
  var diff = abs(direction - goalDir);
  
  if (diff &gt; turnSpeed) {
    var s = sign(angle_difference(goalDir, direction));
    direction += s * turnSpeed;
  }    

  var barrierCollision = position_meeting(x + hspeed, y + vspeed, objBarrier);

  if (!barrierCollision) {
    x += hspeed;
    y += vspeed;
  }
  
  if (direction &gt; 90 &amp;&amp; direction &lt; 270) {
    image_xscale = -1;
    
    if (direction &lt; 180) {
      viewDir = direction - 180;
    } else if (direction &gt; 180) {
      viewDir = direction - 180;
    } else {
      viewDir = 0;  
    }
  
  } else {
    image_xscale = 1;
    viewDir = direction;
  }
  
  
  image_angle = viewDir;

  
  speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objFishFlakes">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///"Eat" fish flake

with (other) {
  instance_destroy();
}

slowdown = true;
alarm[2] = room_speed * slowdownTime;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
