<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup variables
cursorFlash = 0;
cursorRate = 15;
cursorMove = 0;
cursorMoveRate = 7;

if (objPermanentObject.user == noone) {
  text = "";
  cursorPos = 0;
} else {
  text = objPermanentObject.user;
  cursorPos = string_length(text);
}
drawCursor = true;

draw_set_font(fontNormal);

width = 36 * string_width('m') + 10;
height = string_height('//') + 10;

alarm[0] = cursorRate;

locked = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Flash cursor
drawCursor = !drawCursor;

alarm[0] = cursorRate;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Process input

if (!locked) {
  //handle cursorPos movement
  cursorMove = max(0, cursorMove - 1);
  
  if (keyboard_check(vk_left) != keyboard_check(vk_right)) {
      if (cursorMove == 0) {
          if (keyboard_check(vk_left)) {
              if (cursorPos &gt; 0) cursorPos -= 1
          } else {
              if (cursorPos &lt; string_length(text)) cursorPos += 1
          }
          cursorMove = cursorMoveRate
      }
  } else {
    cursorMove = 0
  }
  
  if (keyboard_check_pressed(vk_end)) {
    cursorPos = string_length(text);
  }
  if (keyboard_check_pressed(vk_home)) {
    cursorPos = 0;
  }
  
  //Delete last char
  if (keyboard_check_pressed(vk_delete) || keyboard_check_pressed(vk_backspace)) {
    text = string_delete(text, cursorPos, 1);
    cursorPos -= 1;
  }
  
  
  
  //Handle actual input
  if (keyboard_check_pressed(vk_anykey)) {
    k = keyboard_lastkey;
    c = keyboard_lastchar;
    
    //Make sure it is printable character
    if (keyboard_check_pressed(vk_delete) || keyboard_check_pressed(vk_home) 
      || keyboard_check_pressed(vk_end) || keyboard_check_pressed(vk_left) 
      || keyboard_check_pressed(vk_right) || keyboard_check_pressed(vk_backspace) ) { 
      }
    else if (k &gt;= 40 &amp;&amp; k &lt;= 126 &amp;&amp; string_length(text) &lt; 36) {
      text = string_insert(string(c), text, cursorPos + 1);
      cursorPos += 1;
    } else if (keyboard_check_pressed(vk_enter) &amp;&amp; text != "") {
      locked = true;
      objPermanentObject.user = text;
      scrSendHighScore(text, score);
    }
  }
  
  //Make sure cursorPos is right
  cursorPos = max(0, min(cursorPos, string_length(text)))
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw input box

if (!locked) {
  var color = draw_get_color();
  
  draw_set_color(c_white);
  draw_rectangle(x, y, x+width, y+height, false);
  draw_set_color(c_black);
  draw_rectangle(x, y, x+width, y+height, true);
  
  draw_set_color(color);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw text

if (!locked) {
  draw_set_font(fontNormal);
  draw_set_color(c_black);
  draw_text(x + 5, y, text);
  
  //Draw cursor
  if (drawCursor) {
    w = string_width(string_copy(text, 1, cursorPos));
    h = string_height('\\')
    draw_line(x + w + 5, y, x + w + 5, y + h)
  }
  
  draw_set_halign(fa_left);
  draw_set_valign(fa_top);

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
