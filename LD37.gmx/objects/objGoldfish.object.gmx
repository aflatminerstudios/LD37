<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprGoldfish</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///setup movement variables
maxForward = 2;
maxSpeed = 5;

turnSpeed = 5;

numFrames = 60;

decelPct = 0.6;
accelPct = 1 - decelPct;

accelFrames = numFrames * accelPct;
decelFrames = numFrames - accelFrames;

moveAccel = maxForward / accelFrames;
moveDecel = maxForward / decelFrames;

//Which frame of movement are we on
curFrame = numFrames + 1;

//Starts out not moving
curForward = 0;

//initial direction
direction = 0;
goalDir = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///setup eating variables

hunger = 0;

//For decreasing hunger
flakePower = 20;

//For starving
starvePower = 3;
starveTime = 1; //in seconds
alarm[0] = room_speed * starveTime;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Starve a little bit
hunger += starvePower;

alarm[0] = room_speed * starveTime;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check for input

//if (curFrame &gt; accelFrames) {
  if (scrIsLeftPressed()) {
    scrMoveGoldfish(180);
  } else if (scrIsRightPressed()) {
    scrMoveGoldfish(0);
  } else if (scrIsUpPressed()) {
    scrMoveGoldfish(90);
  } else if (scrIsDownPressed()) {
    scrMoveGoldfish(270);
  }
//}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move
speed = curForward;
if (curFrame &lt; accelFrames) {  
    
  curForward += moveAccel;    
    
  curFrame += 1;
} else if (curForward &gt; 0) {
  
  curForward -= moveDecel;    
  curFrame += 1;

} else {
  curForward = 0;
  speed = 0;
  curFrame = numFrames + 1;
}

if (curForward &gt; maxSpeed) {
  curForward = maxSpeed;
}

if (direction != goalDir) {
  var s = sign(angle_difference(goalDir, direction));
  direction += s * turnSpeed;
}    

if (x &gt; 0 &amp;&amp; x &lt; room_width) {
  x += hspeed;
}
if (y &gt; 0 &amp;&amp; y &lt; room_height) {
  y += vspeed;
}

speed = 0;

  
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check hunger

if (hunger &lt; -100) {
  show_message("Oh no! You ate too much!");
  room_restart();
} else if (hunger &gt; 100) {
  show_message("Oh no! You starved to death!");
  room_restart();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objFishFlakes">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sate your hunger

scrFeedGoldfish(self.id, flakePower);

with (other) {
  instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
