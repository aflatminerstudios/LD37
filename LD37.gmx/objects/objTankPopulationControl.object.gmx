<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Instance variables


minPlants = 3;
maxPlants = 7;

minNeutralFish = 0;
maxNeutralFish = 4;

minHostileFish = 0;
maxHostileFish = 2;

normalRespawnCooldown = room_speed;
belowMinimumRespawnCooldown = 1;

normalRespawnAlarm = 0;
belowMinimumRespawnAlarm = 1;

alarm[normalRespawnAlarm] = normalRespawnCooldown;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create new tank inhabitants because we are below minimum

if(instance_number(objPlant) &lt; minPlants) {
 // show_debug_message("Below minumum plants, creating a plant.");
  scrCreatePlant();
}

if(instance_number(objNeutralFish) &lt; minNeutralFish) {
  //show_debug_message("Below minumum neutral fish, creating a neutral fish.");
  scrCreateNeutralFish();
}

if(instance_number(objHostileFish) &lt; minHostileFish) {
  //show_debug_message("Below minumum hostile fish, creating a hostile fish.");
  scrCreateHostileFish();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Try to create a new instance and reset the timer

var newInhabitantType = choose(objPlant, objPlant, objNeutralFish, objHostileFish);

if(newInhabitantType == objPlant) {
  if(instance_number(objPlant) &lt; maxPlants) {
    scrCreatePlant();
  }
} else if(newInhabitantType == objNeutralFish) {
  if(instance_number(objNeutralFish) &lt; maxNeutralFish) {
    scrCreateNeutralFish();
  }
} else if(newInhabitantType == objHostileFish) {
  if(instance_number(objHostileFish) &lt; maxNeutralFish) {
    scrCreateHostileFish();
  }
}

alarm[normalRespawnAlarm] = normalRespawnCooldown;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check population sizes and set timers accordingly

// Check minimum populations
if(alarm[belowMinimumRespawnAlarm] &lt;= 0) {
  if(instance_number(objPlant) &lt; minPlants ||
     instance_number(objNeutralFish) &lt; minNeutralFish ||
     instance_number(objHostileFish) &lt; minHostileFish)
      alarm[belowMinimumRespawnAlarm] = belowMinimumRespawnCooldown;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
